{"version":3,"sources":["src/settings.js","src/partials/Board.js","src/partials/Paddle.js","src/partials/Ball.js","src/partials/Score.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","BOARD_COLOR","BOARD_WIDTH","BOARD_HEIGHT","PADDLE_WIDTH","PADDLE_HEIGHT","PADDLE_GAP","PADDLE_SPEED","BALL_RADIUS","TEXT_SIZE","MAX_SCORE","KEYS","p1Up","p1Down","p2Up","p2Down","pause","Board","width","height","svg","rect","document","createElementNS","setAttributeNS","line","appendChild","Paddle","boardHeight","x","y","upKey","downKey","onKeyPressedCallBack","onKeyReleasedCallBack","color","score","speed","addEventListener","event","key","keys","moveUp","moveDown","Math","max","min","left","top","right","bottom","setTimeout","paddle","Ball","radius","boardWidth","gameEnded","direction","ping","Audio","PingSound","reset","vx","vy","random","abs","paddle1","paddle2","hitTop","hitBottom","hitLeft","hitRight","increaseScore","getScore","hitWall","checkTop","checkBottom","p2Walls","getCoordinates","p1Walls","shaking","play","ball","wallCollision","paddleCollision","Score","size","scoreText","textContent","Game","element","gameElement","getElementById","board","pressedKeys","gameInit","checkGameInit","Object","values","indexOf","ballMove","movePaddle","innerText","className","score1","score2","paused","setSpeed","innerHTML","render","game","gameLoop","requestAnimationFrame"],"mappings":"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","file":"src.da8cf6c2.js","sourceRoot":"..","sourcesContent":["export const SVG_NS = \"http://www.w3.org/2000/svg\";\nexport const BOARD_COLOR = \"#353535\" ;\nexport const BOARD_WIDTH = 512;\nexport const BOARD_HEIGHT = 256;\n\nexport const PADDLE_WIDTH = 8;\nexport const PADDLE_HEIGHT = 56;\nexport const PADDLE_GAP = 10;\n//export const PADDLE_GAP2 = 494;\nexport const PADDLE_SPEED = 50;\nexport const BALL_RADIUS = 8;\n\nexport const TEXT_SIZE = 30;\n\nexport const MAX_SCORE = 5;\n\n\nexport const KEYS = {\n\tp1Up: \"w\",\n\tp1Down: \"s\",\n\tp2Up: \"ArrowUp\",\n\tp2Down: \"ArrowDown\",\n\tpause: \" \"\n}\n\n\n","import{SVG_NS, BOARD_COLOR } from '../settings';\n\nexport default class Board {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n\n  }\n  render(svg) {\n    //...\n    const rect = document.createElementNS(SVG_NS, \"rect\");\n    rect.setAttributeNS(null, \"width\", this.width);\n    rect.setAttributeNS(null, \"height\", this.height);\n    rect.setAttributeNS(null, \"x\", 0);\n    rect.setAttributeNS(null, \"y\", 0);\n    rect.setAttributeNS(null, \"fill\", BOARD_COLOR);\n\n\n    const line = document.createElementNS(SVG_NS, \"line\");\n    line.setAttributeNS(null, \"x1\", this.width/2);\n    line.setAttributeNS(null, \"y1\", 0);\n    line.setAttributeNS(null, \"x2\", this.width/2);\n    line.setAttributeNS(null, \"y2\", this.height);\n    line.setAttributeNS(null, \"stroke\", \"white\");\n    line.setAttributeNS(null, \"stroke-width\", 4);\n    line.setAttributeNS(null, \"stroke-dasharray\", \"20,15\");  \n\n    svg.appendChild(rect);\n    svg.appendChild(line);\n\n  }\n} \n\n\n","import { SVG_NS, PADDLE_SPEED } from '../settings';\n\nexport default class Paddle {\n  constructor(width, height, boardHeight, x, y, upKey, downKey, onKeyPressedCallBack, onKeyReleasedCallBack, color) {\n    this.width = width;\n    this.height = height;\n    this.x = x;\n    this.y = y;\n    this.boardHeight = boardHeight;\n    this.score = 0;\n    this.speed = PADDLE_SPEED;\n    this.upKey = upKey;\n    this.downKey = downKey;\n    this.color = color;\n\n    document.addEventListener(\"keydown\", event => onKeyPressedCallBack(event.key));\n    document.addEventListener(\"keyup\", event => onKeyReleasedCallBack(event.key));\n  }\n\n  movePaddle(keys){\n    if(keys[this.upKey]) {\n      this.moveUp();\n    }\n    if(keys[this.downKey]) {\n      this.moveDown();\n    }\n  }\n\n  moveUp() {\n    this.y = Math.max(0, this.y - this.speed);\n    // this.y = this.y - this.speed;\n\n  }\n\n\n  moveDown() {\n    this.y = Math.min(this.boardHeight - this.height, this.y + this.speed);\n  }\n\n  increaseScore() {\n    this.score = this.score + 1;\n  }\n  getScore() {\n    return this.score;\n  }\n\n\n  setSpeed(speed) {\n    this.speed = speed;\n  }\n\n  getCoordinates() {\n    return {\n      left: this.x,\n      top: this.y,\n      right: this.x + this.width,\n      bottom: this.y + this.height\n\n    };\n  }\n  \n  shaking() {\n    this.x -= 5;\n    setTimeout(() => {\n      this.x += 5;\n    }, 50);\n\n    setTimeout(() => {\n      this.x -= 5;\n    }, 150);\n\n     setTimeout(() => {\n      this.x += 5;\n    }, 200);\n\n  }\n\n  render(svg) {\n    //...\n    const paddle = document.createElementNS(SVG_NS, \"rect\");\n    paddle.setAttributeNS(null, \"width\", this.width);\n    paddle.setAttributeNS(null, \"height\", this.height);\n    paddle.setAttributeNS(null, \"x\", this.x);\n    paddle.setAttributeNS(null, \"y\", this.y);\n    paddle.setAttributeNS(null, \"fill\", this.color);\n\n    svg.appendChild(paddle);\n\n\n  }\n}","import { SVG_NS, MAX_SCORE } from '../settings';\nimport PingSound from '../../public/sounds/pong-04.wav';\nexport default class Ball {\n  constructor(radius, boardWidth, boardHeight, gameEnded) {\n    this.radius = radius;\n    this.boardWidth = boardWidth;\n    this.boardHeight = boardHeight;\n    this.direction = 1;\n    this.ping = new Audio(PingSound);\n    this.reset();\n    this.gameEnded = gameEnded;\n\n\n  }\n  ballMove() {\n    this.x = this.x + this.vx;\n    this.y = this.y + this.vy;\n\n  }\n\n  reset() {\n    this.x = this.boardWidth / 2;\n    this.y = this.boardHeight / 2;\n    this.vy = 0;\n    while (this.vy === 0) {\n      this.vy = (Math.random() * 10) - 5;\n\n    }\n    this.vx = this.direction * (6 - Math.abs(this.vy));\n  }\n\n  wallCollision(paddle1, paddle2) {\n    const hitTop = (this.y - this.radius <= 0);\n    //console.log(\"here\");\n    const hitBottom = (this.y + this.radius >= this.boardHeight);\n\n    const hitLeft = (this.x + this.radius < 0);\n    const hitRight = (this.x - this.radius > this.boardWidth);\n\n\n\n    if (hitTop || hitBottom) {\n      this.vy = this.vy * -1;\n    }\n\n    if (hitLeft) {\n      this.direction = 1;\n      paddle2.increaseScore();\n      this.reset();\n      if ((paddle1.getScore() === MAX_SCORE ||  paddle2.getScore() === MAX_SCORE)) {\n        this.gameEnded();\n      }\n\n    }\n\n    else if (hitRight) {\n      this.direction = -1;\n      paddle1.increaseScore();\n      this.reset();\n      if ((paddle1.getScore() === MAX_SCORE ||  paddle2.getScore() === MAX_SCORE)) {\n        this.gameEnded();\n      }\n    }\n\n\n  }\n\n  paddleCollision(paddle1, paddle2) {\n    let hitWall, checkTop, checkBottom;\n\n    if (this.vx > 0) {\n      const p2Walls = paddle2.getCoordinates();\n      hitWall = (this.x + this.radius >= p2Walls.left);\n      checkTop = (this.y - this.radius >= p2Walls.top);\n      checkBottom = (this.y + this.radius <= p2Walls.bottom);\n\n\n\n    }\n    else {\n      const p1Walls = paddle1.getCoordinates();\n      hitWall = (this.x - this.radius <= p1Walls.right);\n      checkTop = (this.y - this.radius >= p1Walls.top);\n      checkBottom = (this.y + this.radius <= p1Walls.bottom);\n    }\n    if (hitWall && checkTop && checkBottom) {\n      if (this.vx>0) {\n        paddle2.shaking();\n      } else {\n        paddle1.shaking();\n      }\n      this.ping.play();\n      this.vx = this.vx * -1;\n\n\n    }\n\n  }\n\n\n\n  render(svg, paddle1, paddle2) {\n\n    let ball = document.createElementNS(SVG_NS, \"circle\");\n    ball.setAttributeNS(null, \"r\", this.radius);\n    ball.setAttributeNS(null, \"cx\", this.x);\n    ball.setAttributeNS(null, \"cy\", this.y);\n    ball.setAttributeNS(null, \"fill\", \"white\");\n\n\n    svg.appendChild(ball);\n    // this.ballMove();\n    this.wallCollision(paddle1, paddle2);\n    this.paddleCollision(paddle1, paddle2);\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"," import{SVG_NS} from '../settings';\n\nexport default class Score {\n\tconstructor (x,y,size){\n\t\tthis.x = x;\n\t\tthis.y =y;\n\t\tthis.size=size;\n\n\t}\n\n\trender (svg,score){\n\n\t\tconst scoreText = document.createElementNS(SVG_NS, \"text\");\n\t\tscoreText.setAttributeNS(null, \"x\" ,this.x);\n\t\tscoreText.setAttributeNS(null, \"y\", this.y);\n\t\tscoreText.setAttributeNS(null, \"font-size\", this.size);\n\t\tscoreText.setAttributeNS(null, \"font-family\", \"'Silkscreen Web', monotype\");\n\t\tscoreText.setAttributeNS(null, \"fill\" , \"white\");\n\t\tscoreText.textContent = score;\n\t\tsvg.appendChild(scoreText);\n\n\n\n\n\t}\n}\n\n\n","import {SVG_NS ,PADDLE_HEIGHT,PADDLE_WIDTH,PADDLE_GAP,PADDLE_GAP2, KEYS, BALL_RADIUS, PADDLE_SPEED, TEXT_SIZE, MAX_SCORE} from '../settings';\nimport Board from './Board';\nimport Paddle from './Paddle' ;\nimport Ball from './Ball';\nimport Score from './Score';\n\nexport default class Game \n{\n  constructor(element, width, height) \n  {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n    this.gameElement = document.getElementById(this.element);\n    this.board= new Board(this.width, this.height);\n    this.pressedKeys = [];\n    this.gameInit = false;\n    this.gameEnded = false;\n    const checkGameInit = (key) => {\n      if (!this.gameInit && Object.values(KEYS).indexOf(key) !== -1) {\n        this.gameInit = true;\n        this.ball.ballMove();\n      }\n    }\n    const paddle1onKeyPressed = (key) => {\n      checkGameInit(key);\n      this.pressedKeys[key] = true;\n      this.paddle1.movePaddle(this.pressedKeys);\n    };\n\n    const paddle1onKeyReleased = (key) => {\n      this.pressedKeys[key] = false;\n      this.paddle1.movePaddle(this.pressedKeys);\n    };\n\n    const paddle2onKeyPressed = (key) => {\n      checkGameInit();\n      this.pressedKeys[key] = true;\n      this.paddle2.movePaddle(this.pressedKeys);\n    };\n\n    const paddle2onKeyReleased = (key) => {\n      this.pressedKeys[key] = false;\n      this.paddle2.movePaddle(this.pressedKeys);\n    };\n\n    this.paddle1 = new Paddle(PADDLE_WIDTH,\n                                PADDLE_HEIGHT,\n                                this.height,\n                                PADDLE_GAP,\n                                (this.height/2) - (PADDLE_HEIGHT/2),\n                                KEYS.p1Up,\n                                KEYS.p1Down,\n                                paddle1onKeyPressed,\n                                paddle1onKeyReleased,\n                                '#66FFCC');\n    this.paddle2 = new Paddle(PADDLE_WIDTH,\n                                PADDLE_HEIGHT,\n                                this.height,\n                                this.width-PADDLE_WIDTH-PADDLE_GAP,\n                                (this.height/2) - (PADDLE_HEIGHT/2),\n                                KEYS.p2Up,\n                                KEYS.p2Down,\n                                paddle2onKeyPressed,\n                                paddle2onKeyReleased,\n                                '#FFFF99');\n\n    this.ball= new Ball(BALL_RADIUS, this.width, this.height, () => {\n      this.gameEnded = true;\n      document.getElementById('heading').innerText = this.paddle1.getScore() === MAX_SCORE ? \"GREEN WINS!\" : \"YELLOW WINS!\"\n      document.getElementById('heading').className = \"blinking\";\n    });\n    \n\n    this.score1 = new Score(this.width/2 -50, 30, TEXT_SIZE);\n\n    this.score2 = new Score(this.width/2 +25, 30, TEXT_SIZE);\n\n    this.paused = false;\n    document.addEventListener(\"keydown\", event =>  {\n      if (event.key === KEYS.pause) {\n        this.paddle1.setSpeed(PADDLE_SPEED);\n        this.paddle2.setSpeed(PADDLE_SPEED);\n        this.paused = !this.paused;\n      }\n    });\n\n\n    // Other code goes here...\n  }\n\n  render()\n   {\n    if (this.paused) {\n      this.paddle1.setSpeed(0);\n      this.paddle2.setSpeed(0);\n\n      return;\n    }\n    // More code goes here....\n    this.gameElement.innerHTML='';\n\n\n     let svg = document.createElementNS(SVG_NS, \"svg\");\n       svg.setAttributeNS(null, \"width\", this.width);\n       svg.setAttributeNS(null, \"height\", this.height);\n       svg.setAttributeNS(null, \"viewBox\", `0 0 ${this.width} ${this.height}`);\n       this.gameElement.appendChild(svg);\n\n       this.board.render(svg);\n       this.paddle1.render(svg);\n       this.paddle2.render(svg);\n       this.ball.render(svg,this.paddle1,this.paddle2);\n       this.score1.render(svg,this.paddle1.getScore());\n       this.score2.render(svg,this.paddle2.getScore());\n       if (this.gameInit && !this.gameEnded) {\n        this.ball.ballMove();\n      }\n  }\n}\n","import './styles/game.css';\nimport Game from './partials/Game';\nimport { BOARD_WIDTH, BOARD_HEIGHT } from './settings';\n\n// create a game instance\nconst game = new Game('game', BOARD_WIDTH,  BOARD_HEIGHT);\n\n(function gameLoop() {\n  game.render();\n  requestAnimationFrame(gameLoop);\n\n})();\n"]}